{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/mahdi/projects/introapp/src/components/Navbar.jsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useWindowScroll } from 'react-use'\nimport gsap from 'gsap'\n\nconst navItems = ['Home', 'Products', 'Download']\n\nconst Navbar = () => {\n    const [hasFloatingNav, setHasFloatingNav] = useState(false)\n    const [isActiveIndicator, setIsActiveIndicator] = useState(false)\n    const [isNavVisible, setIsNavVisible] = useState(true)\n    const [lastScrollY, setLastScrollY] = useState(0)\n    const navContainerRef = useRef(null)\n    const audioElRef = useRef(null)\n    const toggleAudioIndicator = () => {\n        setIsActiveIndicator((prev) => !prev)\n        setIsAudioPlaying((prev) => !prev)\n    }\n\n    const { y: currentScrollY } = useWindowScroll()\n    useEffect(() => {\n        if (currentScrollY === 0) {\n            setIsNavVisible(true)\n            setHasFloatingNav(false)\n        } else if (currentScrollY > lastScrollY) {\n            setIsNavVisible(false)\n            setHasFloatingNav(true)\n        } else if (currentScrollY < lastScrollY) {\n            setIsNavVisible(true)\n            setHasFloatingNav(true)\n        }\n        setLastScrollY(currentScrollY)\n    }, [currentScrollY, lastScrollY])\n\n    useEffect(() => {\n        gsap.to(navContainerRef.current, {\n            y: isNavVisible ? 0 : -100,\n            opacity: isNavVisible ? 1 : 0,\n            duration: 0.2\n        })\n    }, [isNavVisible])\n\n\n    return (\n        <div ref={navContainerRef} className={`fixed inset-x-0 z-50 top-4 h-16 transition-all duration-500 border-none md:inset-x-6 ${hasFloatingNav ? 'floating-nav' : ''}`}>\n            <header className='absolute top-1/2 w-full -translate-y-1/2'>\n                <nav className='flex items-center justify-start md:justify-end w-full h-full p-4'>\n                    <div className='block w-screen'>\n                        {navItems.map((item, index) => (\n                            <a key={index} className='nav-hover-btn ms-7 text-xs' href={`#${item.toLocaleLowerCase()}`}>\n                                {item}\n                            </a>\n                        ))}\n                    </div>\n                </nav>\n            </header>\n        </div>\n    )\n}\n\nexport default Navbar"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,MAAM,WAAW;IAAC;IAAQ;IAAY;CAAW;AAEjD,MAAM,SAAS;IACX,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAC/B,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAC1B,MAAM,uBAAuB;QACzB,qBAAqB,CAAC,OAAS,CAAC;QAChC,kBAAkB,CAAC,OAAS,CAAC;IACjC;IAEA,MAAM,EAAE,GAAG,cAAc,EAAE,GAAG,CAAA,GAAA,oMAAA,CAAA,kBAAe,AAAD;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,mBAAmB,GAAG;YACtB,gBAAgB;YAChB,kBAAkB;QACtB,OAAO,IAAI,iBAAiB,aAAa;YACrC,gBAAgB;YAChB,kBAAkB;QACtB,OAAO,IAAI,iBAAiB,aAAa;YACrC,gBAAgB;YAChB,kBAAkB;QACtB;QACA,eAAe;IACnB,GAAG;QAAC;QAAgB;KAAY;IAEhC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,6IAAA,CAAA,UAAI,CAAC,EAAE,CAAC,gBAAgB,OAAO,EAAE;YAC7B,GAAG,eAAe,IAAI,CAAC;YACvB,SAAS,eAAe,IAAI;YAC5B,UAAU;QACd;IACJ,GAAG;QAAC;KAAa;IAGjB,qBACI,8OAAC;QAAI,KAAK;QAAiB,WAAW,CAAC,qFAAqF,EAAE,iBAAiB,iBAAiB,IAAI;kBAChK,cAAA,8OAAC;YAAO,WAAU;sBACd,cAAA,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACV,SAAS,GAAG,CAAC,CAAC,MAAM,sBACjB,8OAAC;4BAAc,WAAU;4BAA6B,MAAM,CAAC,CAAC,EAAE,KAAK,iBAAiB,IAAI;sCACrF;2BADG;;;;;;;;;;;;;;;;;;;;;;;;;AASpC;uCAEe","debugId":null}}]
}